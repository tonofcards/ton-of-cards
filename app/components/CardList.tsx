'use client';
import { useMemo } from 'react';
export type Card={id:string;created_at:string;player:string;sport:'basketball'|'football';year:number|null;brand:string|null;set_name:string|null;card_number:string|null;parallel:string|null;serial_numbered:string|null;grade:string|null;purchase_price:number|null;list_price:number|null;market_value:number|null;status:'inventory'|'listed'|'sold';image_url:string|null;};
export default function CardList({cards}:{cards:Card[]}){
  const totals=useMemo(()=>{const sumList=cards.reduce((a,c)=>a+(Number(c.list_price??0)||0),0);const sumMarket=cards.reduce((a,c)=>a+(Number(c.market_value??0)||0),0);return{sumList:Number(sumList.toFixed(2)),sumMarket:Number(sumMarket.toFixed(2)),count:cards.length};},[cards]);
  function makeTitle(c:Card){const bits=[c.year||'',c.brand||'',c.set_name||'',c.player,c.card_number?`#${c.card_number}`:'',c.parallel?c.parallel:'',c.serial_numbered?c.serial_numbered:'',c.grade?c.grade:''].filter(Boolean);return bits.join(' ').replace(/\s+/g,' ').trim();}
  function copy(text:string){navigator.clipboard.writeText(text).then(()=>alert('Copied to clipboard')).catch(()=>alert('Copy failed'));}
  function exportCSV(){const header=['player','sport','year','brand','set_name','card_number','parallel','serial_numbered','grade','purchase_price','list_price','market_value','status','image_url'];const rows=cards.map(c=>header.map(h=>(c as any)[h]??''));const all=[header].concat(rows).map(r=>r.map(x=>`"${String(x).replace(/"/g,'""')}"`).join(',')).join('\n');const blob=new Blob([all],{type:'text/csv;charset=utf-8;'});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='ton-of-cards.csv';a.click();URL.revokeObjectURL(url);}
  return(<section className="space"><div className="summary"><div><strong>{totals.count}</strong> cards</div><div>Total BIN: <strong>${'{'}totals.sumList.toLocaleString(){'}'}</strong></div><div>Total Market: <strong>${'{'}totals.sumMarket.toLocaleString(){'}'}</strong></div><button className="btn btn-secondary" onClick={exportCSV}>Export CSV</button></div><ul className="grid">{cards.map(c=>(<li key={c.id} className="card"><div className="row between"><div className="title">{makeTitle(c)}</div><span className={`badge ${c.status}`}>{c.status}</span></div><div className="muted">{c.parallel?`Parallel: ${c.parallel} · `:''}{c.serial_numbered?`SN: ${c.serial_numbered} · `:''}{c.grade?`Grade: ${c.grade} · `:''}{c.year?`Year: ${c.year}`:''}</div><div className="prices"><span>BIN: ${'{'}Number(c.list_price??0).toFixed(2){'}'}</span><span>Market: ${'{'}Number(c.market_value??0).toFixed(2){'}'}</span></div>{c.image_url&&(<div className="image-wrap"><img src={c.image_url} alt={c.player}/></div>)}<div className="row gap"><button className="btn btn-tertiary" onClick={()=>copy(makeTitle(c))}>Copy Listing Title</button><a className="btn" href="https://www.ebay.com/sl/sell" target="_blank" rel="noreferrer">Open eBay Sell</a></div></li>))}</ul></section>);}
